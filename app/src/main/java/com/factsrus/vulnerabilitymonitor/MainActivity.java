package com.factsrus.vulnerabilitymonitor;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    private ListView mainList;
    private RESTService restService = new RESTService();
    //Values set into preferences by default for the size of list to obtain
    private final String defaultListKey = "UpdateSize";
    private final int defaultListValue = 25;

    private void updateList()
    {
        ConnectivityManager connMgr = (ConnectivityManager)
                getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();
        if (networkInfo != null && networkInfo.isConnected()) {
            //Call RESTService & use getPreferences(Context.MODE_PRIVATE).getInt(defaultListKey, defaultListValue);
            ArrayList<Project> projects = new ArrayList<Project>();
            try {
                projects = restService.getProjects(getPreferences(Context.MODE_PRIVATE).getInt(defaultListKey,defaultListValue));
            } catch (IOException e) {
                System.out.print(e);
                listError("Error to get projects.");
            }
            mainList.setAdapter(new ProjectAdapter(this,projects));
            mainList.setClickable(true);
            mainList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    //Object o = mainList.getItemAtPosition(position);
                    //Call RESTService to see if it has vulnerability
                    //if(itDoes)
                    //Intent intent = new Intent(view.getContext(), ProjectDetailsActivity.class);
                    //intent.putExtra("id",5);
                    //else
                    //Toast.makeText(getApplicationContext(), "This project has no vulnerability.", Toast.LENGTH_SHORT).show();
                }
            });
        } else {
            // display error
           listError("No connection error.");
        }
    }

    private void listError(String errorMsg)
    {
        List<String> noConnectionDefault = new ArrayList<String>();
        noConnectionDefault.add(errorMsg);

        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(
                this,
                android.R.layout.simple_list_item_1,
                noConnectionDefault );

        mainList.setAdapter(arrayAdapter);
    }


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mainList = (ListView) findViewById(R.id.MainList);
        if(!getPreferences(Context.MODE_PRIVATE).contains("UpdateSize")) {
            getPreferences(Context.MODE_PRIVATE).edit().putInt(defaultListKey, defaultListValue);
            getPreferences(Context.MODE_PRIVATE).edit().commit();
        }
        updateList();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
