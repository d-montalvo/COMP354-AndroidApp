package com.factsrus.vulnerabilitymonitor;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import java.io.IOException;

public class ProjectDetailsActivity extends AppCompatActivity {
    private String projectId;
    private RESTService restService = new RESTService();
    private ListView vulnList;
    private ListView depList;
    private TextView detailView;
    private Button refreshBtn;

    private final String defaultListKey = "UpdateSize";
    private final int defaultListValue = 25;
    private final String defaultUpdateRateKey = "UpdateRate";
    private final int defaultUpdateRateValue = 0;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_project_details);
        vulnList = (ListView) findViewById(R.id.VulnList);
        depList = (ListView) findViewById(R.id.DepList);
        detailView = (TextView) findViewById(R.id.DetailsView);
        updateList();
        refreshBtn = (Button) findViewById(R.id.refreshBtn);
        refreshBtn.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                updateList();
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_project_details, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        if (id == R.id.action_rateSettings) {
            int i = getPreferences(Context.MODE_PRIVATE).getInt(defaultUpdateRateKey,defaultUpdateRateValue);
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setTitle("Choose an update interval.")
                    .setSingleChoiceItems(new String[]{"Never","Hourly","Daily","Weekly"},i, new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int pos) {
                            getPreferences(Context.MODE_PRIVATE).edit().remove(defaultUpdateRateKey).putInt(defaultUpdateRateKey, pos).commit();
                        }
                    }).show();
            return true;
        }
        else{
            if (id == R.id.action_listSettings) {
                int i = getPreferences(Context.MODE_PRIVATE).getInt(defaultListKey,defaultListValue);
                switch(i){
                    case 10:
                        i=0;
                        break;
                    case 25:
                        i=1;
                        break;
                    case 50:
                        i=2;
                        break;
                    case 100:
                        i=3;
                        break;
                }
                AlertDialog.Builder builder = new AlertDialog.Builder(this);
                builder.setTitle("Choose the number of projects to fetch.")
                        .setSingleChoiceItems(new String[]{"10","25","50","100"},i, new DialogInterface.OnClickListener() {
                            public void onClick(DialogInterface dialog, int pos) {
                                switch(pos){
                                    case 0:
                                        getPreferences(Context.MODE_PRIVATE).edit().remove(defaultListKey).putInt(defaultListKey, 10).commit();
                                        break;
                                    case 1:
                                        getPreferences(Context.MODE_PRIVATE).edit().remove(defaultListKey).putInt(defaultListKey, 25).commit();
                                        break;
                                    case 2:
                                        getPreferences(Context.MODE_PRIVATE).edit().remove(defaultListKey).putInt(defaultListKey, 50).commit();
                                        break;
                                    case 3:
                                        getPreferences(Context.MODE_PRIVATE).edit().remove(defaultListKey).putInt(defaultListKey, 100).commit();
                                        break;
                                }

                            }
                        }).show();
                return true;
            }
        }

        return super.onOptionsItemSelected(item);
    }
    private void updateList()
    {
        Intent intent = getIntent();
        projectId = intent.getStringExtra("id");
        ConnectivityManager connMgr = (ConnectivityManager)
                getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();
        if (networkInfo != null && networkInfo.isConnected()) {
            //Call RESTService & use getPreferences(Context.MODE_PRIVATE).getInt(defaultListKey, defaultListValue);
            Project project = new Project();
            try {
                project = restService.getProject(projectId,true);
            } catch (IOException e) {
                Toast.makeText(this,"Error fetching project detail.\n" + "Server may be down.",Toast.LENGTH_LONG).show();
            }
            if(project.getID() == null)
            {
                Toast.makeText(this,"Invalid project format. \n Contact IT administration with project name.",Toast.LENGTH_LONG).show();
            }
            vulnList.setAdapter(new ArrayAdapter<Vulnerability>(this, android.R.layout.simple_list_item_1, project.getVulnerabilities()));
            vulnList.setClickable(true);
            vulnList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    Vulnerability entry = (Vulnerability) parent.getItemAtPosition(position);
                    if (!entry.getVulnID().equals("NONE")) {
                        AlertDialog.Builder showVuln = new AlertDialog.Builder(view.getContext());
                        showVuln.setTitle("ID: " + entry.getVulnID());
                        showVuln.setMessage("Severity: \n" + entry.getSeverity() + "\nDisclosure Date: \n" + entry.getDisclosureDate());
                        showVuln.show();
                    }
                }
            });
            depList.setAdapter(new ArrayAdapter<Project>(this, android.R.layout.simple_list_item_1, project.getDependents()));
            depList.setClickable(true);
            depList.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    Project entry = (Project) parent.getItemAtPosition(position);
                    if (!entry.getArtifactID().equals("NONE")) {
                        Intent intent = new Intent(view.getContext(), ProjectDetailsActivity.class);
                        intent.putExtra("id", entry.getID());
                        startActivity(intent);
                    }
                }
            });
            if(project.isEmpty()) {
                detailView.setText("The project has an invalid format.\nInformation cannot be obtained from server.");
            }
            else {
                String detail = "";
                if(project.getVersion()!=null)
                    detail += ("ArtifactID: " + project.getArtifactID() +"\n");
                if(project.getVersion()!=null)
                    detail += ("ID: " + project.getID() +"\n");
                if(project.getVersion()!=null)
                    detail += ("GroupID: " + project.getGroupID() +"\n");
                if(project.getVersion()!=null)
                    detail += ("Version: " + project.getVersion() +"\n");
                detailView.setText(detail);
            }

        } else {
            // display error
            Toast.makeText(this, "Error. No internet connection.", Toast.LENGTH_LONG).show();
            return;
        }
    }

}
